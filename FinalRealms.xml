<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>XP</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Attacked</name>
				<script>addFight(matches[2])
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;]*You are attacked by (.*).$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Death blow</name>
				<script>removeFight(matches[2])
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^.* dealt the death blow to (.*).$</string>
					<string>^.* dies\.$</string>
					<string>^.* dies, and </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Assault off</name>
				<script>assaulting = false
startAssaulting()

</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>.*You drop into a normal fighting stance as your onslaught of assault and battery ends.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Entered room</name>
				<script>if xp_helper then
	display("Entered a room")
	xp_timer = tempTimer(1, [[xpWalk()]])
end
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^(.* \[([a-z,]+)\])\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Party attack</name>
				<script>--display(matches[1])
--display(matches[2])
fighting = 0
local targets = matches[2]
local comma_separated = targets:gsub(" and ", ",")
local splitted = string.split(comma_separated, ",")
--display(splitted)
--display(#splitted)
for i = 1,#splitted do
	addFight(splitted[i]:trim())
end

display(fighting)</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;]*You lead your party into battle against (.*)\.$</string>
					<string>.* leads h.. party consisting .* you into battle against (.*)\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You attack</name>
				<script>--display(matches[1])
--display(matches[2])

local targets = matches[2]
local comma_separated = targets:gsub(" and ", ",")
local splitted = string.split(comma_separated, ",")
--display(splitted)
--display(#splitted)
for i = 1,#splitted do
	addFight(splitted[i]:trim())
end


--addFight(matches[2])
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;]*Ok\.  Fight with (.*) starts.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>No targets</name>
				<script>fighting = 0
visitRoom()
stepXp()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[&gt;\] ]*You cannot find anything by that name here.$</string>
					<string>^[&gt;\] ]*No monsters around.$</string>
					<string>^[&gt;\] ]*You don't see any .* here\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Utility</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Resize gag</name>
				<script>deleteLine()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Your machine told our machine that your terminal has</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>2</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Login</name>
				<script>send("term ansi")
send("sheet")
tempTimer(60, Setup)


</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You last logged in from</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Character info</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Guild</name>
				<script>--For example "Priest of Taniwha"
local guild_name = matches[2]
setupGuild(guild_name)
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Guild         : (.*?)  </string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>XP Cost</name>
				<script>local max_xp_str = matches[3]
max_xp_str = max_xp_str:gsub("[.]", "")
max_xp = tonumber(max_xp_str)

local xp_str = matches[2]
xp_str = xp_str:gsub("[.]", "")
xp = tonumber(xp_str)

updateGauges()
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^.*       Experience    : ([\d.]+) \(([\d.]+)\)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Score</name>
				<script>--display(matches)
hp = tonumber(matches[2])
max_hp = tonumber(matches[3])
gp = tonumber(matches[4])
max_gp = tonumber(matches[5])

local xp_str = matches[6]
xp_str = xp_str:gsub("[.]", "")
--display(xp_str)
xp = tonumber(xp_str)

xp_stats.new_xp_value(xp)

updateGauges()

checkHealth()
checkGuildPoints()
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[&gt; ]*Hp: (\d+)\((\d+)\)  Gp: (\d+)\((\d+)\)  Xp: (.*)  Scp: \d+$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>HP and GP</name>
				<script>hp = tonumber(matches[2])
gp = tonumber(matches[3])

updateGauges()

checkHealth()
--checkGuildPoints()

--if xp_helper or xp_health_pause then
if hp/max_hp &lt; 0.8 then
  send("party report")
end
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;\]]*HP: (\d+) GP: (\d+)$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>HP sheet</name>
				<script>hp = tonumber(matches[2])
max_hp = tonumber(matches[3])

updateGauges()

checkHealth()
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>     Hit Points    : (\d+) \((\d+)\)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>GP Sheet</name>
				<script>gp = tonumber(matches[2])
max_gp = tonumber(matches[3])

updateGauges()
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>     Guild Points  : (\d+) \((\d+)\)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Level</name>
				<script>level = tonumber(matches[2])
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>Level         : (\d*)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Movement</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Cant see</name>
				<script>--display(matches)

if current_room and movement then
		-- Try to find an existing room by following the exit from the last room
		current_exits = getRoomExits(current_room)
		room_id = nil
		for dir,room in pairs(current_exits) do
			if exitmap[dir] == exitmap[movement] then
				room_id = room
			end
		end
		for dir,room in pairs(getSpecialExitsSwap(current_room)) do
			if dir == movement then
				room_id = room
			end
		end
		current_room = room_id
end

movement = nil
if current_room then
	centerview(current_room)
	if speed_walking then
		stepWalk()
	end
	if xp_helper then
		stepXp()
	end
end
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;\]]*You are blinded by the light\.$</string>
					<string>^[ &gt;\]]*It's too dark to see anything\.$</string>
					<string>You can't see much.</string>
					<string>^[ &gt;\]]*The light is painfully bright\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>BriefRoom</name>
				<script>-- check if the current room has been deleted
if current_room and not roomExists(current_room) then
	current_room = nil
end
--display(matches)
room_name = matches[2]
room_name = room_name:gsub("&gt;", "")
room_name = room_name:trim()

--display(room_name)
room_name = room_name:trim()
direction_string = matches[3]
directions = string.split(direction_string, ",")
--display(directions)

if movement then
	if not current_room and auto_mapping then
		-- Start of area
		room_id = createRoomID()
		addRoom(room_id)
		setRoomName(room_id, room_name)
		setRoomArea(room_id, area_id)
		setRoomCoordinates(room_id, 0,0,0)
		detectAndSetRoomEnvironment(room_id)
		for i,dir in pairs(directions) do
			normalized_dir = exitmap[dir]
			if normalized_dir == nil then
			elseif normalized_dir &gt;= 1 and normalized_dir &lt;= 10 then
				setExitStub(room_id, normalized_dir, true)
			end
		end
		current_room = room_id
	elseif not current_room then --and map_locate then
		current_room = findRoom(room_name)
	elseif current_room then
		-- Try to find an existing room by following the exit from the last room
		current_exits = getRoomExits(current_room)
		-- Check if there are any exits, if not the room is not valid anymore
--		if not current_exits then
--			current_room = nil
--			return
--		end
		room_id = nil
		for dir,room in pairs(current_exits) do
			if exitmap[dir] == exitmap[movement] then
				room_id = room
			end
		end
		for dir,room in pairs(getSpecialExitsSwap(current_room)) do
			if dir == movement then
				room_id = room
			end
		end
		if room_id == nil and auto_mapping then
			-- No room found when moving that direction, is it a normal move?
			if exitmap[movement] ~= nil then
				-- try to find one at the coordinates
				x,y,z = getRelativeCoordinates(current_room, movement)
				potential_rooms = getRoomsByPosition(getRoomArea(current_room), x,y,z)
				if potential_rooms[0] ~= nil and getRoomName(potential_rooms[0]) == room_name then
					room_id = potential_rooms[0]
				end
			end
			if room_id == nil then
				room_id = createRoomID()
				addRoom(room_id)
				setRoomName(room_id, room_name)
				setRoomArea(room_id, area_id)
				setRelativeCoordinates(room_id, current_room, movement)
				detectAndSetRoomEnvironment(room_id)
				-- new room, create stubs
				for i,dir in pairs(directions) do
					normalized_dir = exitmap[dir]
					if normalized_dir == nil then
					elseif normalized_dir &gt;= 1 and normalized_dir &lt;= 10 then
						setExitStub(room_id, exitmap[dir], true)
					end
				end
			end
			if exitmap[movement] ~= nil then
				coming_from = opposingmap[movement]
				for i,dir in pairs(directions) do
					if coming_from == dir then
						setExit(room_id, current_room, exitmap[coming_from])
					end
				end
				-- Connect with the room we came from
				setExit(current_room, room_id, exitmap[movement])
			else
				addSpecialExit(current_room, room_id, movement)
			end
		elseif room_id then
			-- There was a room, but are we really there?
			found_room_name = getRoomName(room_id)
			if room_name ~= found_room_name and not xp_helper and not string.starts(room_name, "There are ") then
				echo("Not in the expected room, trying to find the right room...\n")
				room_id = findRoom(room_name)
			end
		end
		-- And remember that we moved
		current_room = room_id
	end
elseif current_room == nil or getRoomName(current_room) ~= room_name then
	-- No known room and we're not moving, a glance or login happend, or the room name was not correct
    -- could also be a special move
	current_room = findRoom(room_name)
end

--echo("\n")
--echo("Area: " .. area .. "\n")
--echo("Room: " .. room_name .. "\n")
--echo("Directions: " .. direction_string .. "\n")

--display(directions)

movement = nil
if current_room then
--	detectAndSetRoomEnvironment(current_room)
	centerview(current_room)
	if auto_mapping then
		echo("(" .. current_room .. ")")
	end
	if speed_walking then
		stepWalk()
	end
	if xp_helper or fleeing then
--		xp_timer = tempTimer(2, stepXp)
		stepXp()
	end
end
--display(current_room)

</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;\]]*(.* \[([a-z, ]+)\])\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>AbortMovement</name>
				<script>movement = nil
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>The attempt to .* didn't really work out.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Communication</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Tells</name>
				<script>--openUserWindow("Chat")
selectCaptureGroup(2)
copy()
appendBuffer("Chat1")

playSoundFile(getMudletHomeDir() .. "/Tick.mp3")

capturing_tell = true
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>5</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^[ &gt;\]]*(.* (?:tells|asks) you: .*)$</string>
					<string>^[ &gt;\]]*(You say: .*)$</string>
					<string>^[ &gt;\]]*(You (?:tell|ask).*: .*)$</string>
					<string>^[ &gt;\]]*(.* (?:says|asks): .*)$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Multiline</name>
					<script>if capturing_tell then
	selectCaptureGroup(1)
	copy()
	appendBuffer("Chat1")
end

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^      .*$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tell stops</name>
					<script>capturing_tell = false</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^[^ ]*</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Guilds</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Taniwha</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blessing off</name>
					<script>blessing = false
refreshBuffs()
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your blessing wears off</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Blessing on</name>
					<script>blessing = true
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cast Bless upon yourself.</string>
						<string>Your target is already affected by a bless spell.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rainbow on</name>
					<script>rainbow = true
refreshButtons()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You summon the power of the light and wrap a shimmering rainbow around yourself.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rainbow off</name>
					<script>rainbow = false
refreshBuffs()
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your rainbow vanishes...</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prayer off</name>
					<script>prayer = false
refreshBuffs()
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your prayer of battle wears off.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prayer on</name>
					<script>prayer = true
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You cast a Prayer upon yourself.</string>
						<string>Your target is already affected by a prayer spell.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Praying</name>
					<script>if gp &lt;= 0.5*max_gp then
	send("pray power")
else
	send("pray experience")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You feel calmer.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Courage on</name>
					<script>courage = true
refreshButtons()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Courage fills your spirit!  Nothing could stop you now!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Courage off</name>
					<script>courage = false
refreshButtons()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Fear creeps back into your spirit... your courage is gone.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Bard</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Song begins</name>
					<script>singing = true
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin to play the</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Song ends</name>
					<script>singing = false
refreshButtons()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Your song ends.</string>
						<string>You stop singing.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>3</integer>
						<integer>3</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Vanguard</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Assault off</name>
					<script>assaulting = false
refreshButtons()
refreshBuffs()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You drop into a normal fighting stance as your onslaught of assault and battery ends.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Assault on</name>
					<script>assaulting = true
refreshButtons()
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You prepare to assail your enemies with sudden and violent attacks.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>XP</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>MarkRooms</name>
				<script>highlightRepopped()
</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:20.000</time>
			</Timer>
		</TimerGroup>
		<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>keepalive</name>
			<script>send("gl")
</script>
			<command></command>
			<packageName></packageName>
			<time>00:20:00.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>score</name>
			<script>auto_cast = auto_cast or false
xp_helper = xp_helper or false
xp_health_pause = xp_health_pause or false

if auto_cast or xp_helper or xp_health_pause or auto_sing then
  send("sc")
end
</script>
			<command></command>
			<packageName></packageName>
			<time>00:01:00.000</time>
		</Timer>
		<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Auto buff</name>
			<script>refreshBuffs()
</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:10.000</time>
		</Timer>
		<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>Autocasting</name>
			<script>doCasts()
</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.100</time>
		</Timer>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Questlist</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>List quests</name>
				<script>questnr = 1

function list_quest()
	send("quest " .. tostring(questnr))
	send("")
	send("")

	if questnr &lt;= 400 then
		quest_timer = tempTimer(2, list_quest)
	end

	questnr = questnr + 1
end

list_quest()</script>
				<command></command>
				<packageName></packageName>
				<regex>^list_quests$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>XP</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="no" isFolder="no">
				<name>Show fights</name>
				<script>echo("Fighting: " .. fighting .. "\n")
</script>
				<command></command>
				<packageName></packageName>
				<regex>^fights$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Turn on/off xping</name>
				<script>toggleXp()
refreshButtons()</script>
				<command></command>
				<packageName></packageName>
				<regex>^xp (on|off)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Pause xping</name>
				<script>xp_helper = false</script>
				<command></command>
				<packageName></packageName>
				<regex>^xp pause$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Resume xping</name>
				<script>xp_helper = true
stepXp()
</script>
				<command></command>
				<packageName></packageName>
				<regex>^xp resume$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Select XP area</name>
				<script>xp_areas = xp_areas or {}

xp_area_name = matches[2]
if xp_areas[matches[2]] then
	xp_area = xp_areas[xp_area_name]
	highlightRooms(xp_area.rooms)
	echo("Selected area " .. xp_area_name .. "\n")
else
	xp_area = {}
	xp_areas[xp_area_name] = xp_area
	xp_area.rooms = {}
	echo("New area " .. xp_area_name .. "\n")
end

refreshButtons()
</script>
				<command></command>
				<packageName></packageName>
				<regex>^select_xp_area (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Remove XP area</name>
				<script>xp_areas = xp_areas or {}

if xp_areas[matches[2]] then
	xp_area = xp_areas[matches[2]]
	unhightlightRooms(xp_area)
	xp_areas[matches[2]] = nil
	xp_area = nil
	xp_area_name = nil
	echo("Removed area " .. matches[2] .. "\n")
else
	echo("No such area\n")
end
</script>
				<command></command>
				<packageName></packageName>
				<regex>^remove_xp_area (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>List XP areas</name>
				<script>listXpAreas()
</script>
				<command></command>
				<packageName></packageName>
				<regex>^list_xp_areas$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Map</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Movement</name>
				<script>speed_walking = false
movement = matches[1]
send(matches[1], false)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^(n|s|e|w|nw|ne|sw|se|u|d|in|out)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Map move only</name>
				<script>map_movement = matches[2]
map_movement_long = long_exits[map_movement]
exits = getRoomExits(current_room)
move_to_room = exits[map_movement_long]

if move_to_room then
	current_room = move_to_room
	centerview(current_room)
end
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>List rooms in current area</name>
				<script>if current_room == nil then
	echo("\nIn unknown room\n")
else
	area = getRoomArea(current_room)
	room_ids = getAreaRooms(area)
	listRooms(room_ids)
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_list rooms$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>List areas</name>
				<script>echo(" ===== Mapped areas ==== \n")
area_table = getAreaTableSwap()
for id,name in pairs(area_table) do
	echo("  " .. name .. " (" .. id .. ")\n")
end
echo(" ======================= \n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_list areas$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>List rooms in area</name>
				<script>area = tonumber(matches[2])
listRooms(getAreaRooms(area))
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_list rooms (\d+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Set current room</name>
				<script>current_room = matches[2]
centerview(current_room)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_center (\d+)$</regex>
			</Alias>
			<Alias isActive="no" isFolder="no">
				<name>Auto mapping on/off</name>
				<script>auto_mapping = matches[2] == "on"
echo("Ok, auto mapping is now " .. tostring(auto_mapping) .. "\n")
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_auto (on|off)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Find location on map</name>
				<script>current_room = nil
map_locate = true
echo("Try to find location on map, move a square!\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_locate$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Abort finding location</name>
				<script>map_locate = false
echo("Ok, stopped trying to find location on map.\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_locate stop$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Mapping area</name>
				<script>if matches[2] == "nil" or matches[2] == "none" then
	area_name = nil
	area_id = nil
	auto_mapping = false
	echo("Stopped mapping.\n")
else
	area_name = getAreaTableSwap()[tonumber(matches[2])]
	if area_name == nil then
		area_name = matches[2]
		area_id = getAreaTable()[area_name]
	else
		area_id = matches[2]
	end
	if area_id == nil then
		area_id = addAreaName(area_name)
		echo("New area " .. area_name .. "(" .. area_id .. ")\n")
	end
	auto_mapping = true
	echo("Started mapping ".. area_name .. "(" .. area_id ..")\n")
end
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_area (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Nudge room</name>
				<script>setRelativeCoordinates(current_room, current_room, matches[2])
centerview(current_room)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_nudge (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Special movement</name>
				<script>movement = matches[2]
send(movement)</script>
				<command></command>
				<packageName></packageName>
				<regex>^move (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Mark room with char</name>
				<script>setRoomChar(current_room, 'B')
</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_mark (\w)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Speed walk to waypoint</name>
				<script>room_id = locations[matches[2]]
if room_id == nil then
	room_id = tonumber(matches[2])
end

if room_id ~= nil then
	echo("Speed-walking to ".. matches[2] .. "\n")
	gotoRoom(room_id)
else
	echo("No such location defined. Just 'speed' will give locations.\n")
end

</script>
				<command></command>
				<packageName></packageName>
				<regex>^speed (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Show current room</name>
				<script>echo("Current room: " .. current_room .. "\n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^map_room$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Show waypoints</name>
				<script>showLocations()</script>
				<command></command>
				<packageName></packageName>
				<regex>^speed$</regex>
			</Alias>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage>
		<ActionGroup isActive="yes" isFolder="yes" isPushButton="no" isFlatButton="no" useCustomLayout="no">
			<name>Taskbar</name>
			<packageName></packageName>
			<script></script>
			<css></css>
			<commandButtonUp></commandButtonUp>
			<commandButtonDown></commandButtonDown>
			<icon></icon>
			<orientation>0</orientation>
			<location>0</location>
			<posX>0</posX>
			<posY>0</posY>
			<mButtonState>1</mButtonState>
			<sizeX>458752</sizeX>
			<sizeY>1</sizeY>
			<buttonColumn>1</buttonColumn>
			<buttonRotation>0</buttonRotation>
			<buttonColor>#ffffff</buttonColor>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Layout</name>
				<packageName></packageName>
				<script>initLayout()</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>692060416</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="yes" useCustomLayout="no">
				<name>zoom</name>
				<packageName></packageName>
				<script>map_zoom = 20
setMapZoom(map_zoom)
centerview(current_room)</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>zoom in</name>
				<packageName></packageName>
				<script>map_zoom = map_zoom or 20
map_zoom = map_zoom - 5
setMapZoom(map_zoom)
centerview(current_room)</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>7</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="yes" useCustomLayout="no">
				<name>zoom ut</name>
				<packageName></packageName>
				<script>map_zoom = map_zoom or 20
map_zoom = map_zoom + 5
setMapZoom(map_zoom)
centerview(current_room)</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>1179666</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Load map</name>
				<packageName></packageName>
				<script>loadFinalRealmsMap()
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Save map</name>
				<packageName></packageName>
				<script>saveFinalRealmsMap()
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Re-run setup</name>
				<packageName></packageName>
				<script>Setup()
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
			<Action isActive="yes" isFolder="no" isPushButton="no" isFlatButton="no" useCustomLayout="no">
				<name>Test effects</name>
				<packageName></packageName>
				<script>setupEffectsGauges()

--local test1 = { ["Bless"] = 200 }
--updateEffects(test1)

--registerNamedTimer("magdar", "testTimer1", 5, function() display("done") end, false)
--registerNamedTimer("fr", "refreshEffectsTimer", 0.5, function() display("done") end, false)
</script>
				<css></css>
				<commandButtonUp></commandButtonUp>
				<commandButtonDown></commandButtonDown>
				<icon></icon>
				<orientation>1</orientation>
				<location>0</location>
				<posX>0</posX>
				<posY>0</posY>
				<mButtonState>1</mButtonState>
				<sizeX>0</sizeX>
				<sizeY>0</sizeY>
				<buttonColumn>1</buttonColumn>
				<buttonRotation>0</buttonRotation>
				<buttonColor>#ffffff</buttonColor>
			</Action>
		</ActionGroup>
	</ActionPackage>
	<ScriptPackage>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Guilds</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Bard</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>BardSetup</name>
					<packageName></packageName>
					<script>function setupBard()
  addGuild(
  {
    name = "Bard",
    buffs = {
      createBuff("Protection", "cast protection at me"),
      createBuff("Singing", "play")
    }
  })
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
			<ScriptGroup isActive="yes" isFolder="yes">
				<name>Vanguard</name>
				<packageName></packageName>
				<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
				<eventHandlerList />
				<Script isActive="yes" isFolder="no">
					<name>VanguardSetup</name>
					<packageName></packageName>
					<script>function setupVanguard()
  addGuild(
  {
    name = "Vanguard",
    buffs = {
      createBuffF("assault", function() send("assault " .. (level + 4)) end),
      createBuff("vigor", "vigor")
    }
  })
end
</script>
					<eventHandlerList />
				</Script>
			</ScriptGroup>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Layout</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>initLayout</name>
				<packageName></packageName>
				<script>function initLayout()

  leftOfMapContainer = Geyser.Container:new({
    name="leftOfMapContainer",
    x = 0, y = 0,
    width="70%", height="100%"
  })
  leftOfMapContainer:flash()

	setupChat()
	setupMap()
	setupGauges()
  setupEffectsGauges()
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Chat</name>
				<packageName></packageName>
				<script>function setupChat()
	chat_window = Geyser.MiniConsole:new({
	  name="Chat1",
	  x="70%", y="81%",
	  width="29%", height="20%",
	})
	setMiniConsoleFontSize("Chat1", 12)
	setBackgroundColor("Chat1", 0,0,0,255)
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Map</name>
				<packageName></packageName>
				<script>function setupMap()
	map_window = Geyser.Mapper:new({
	  name = "mapper",
	  x = "70%", y = 0, -- edit here if you want to move it
	  width = "30%", height = "80%"
	})
	setMapZoom(20)

	addMapEvent("Show room id", "showRoomId")

	addMapEvent("Add to XP-area", "add2XpArea")
	addMapEvent("Set XP-area", "setXpArea")
	addMapEvent("Remove from XP-area", "removeFromXpArea")
	addMapEvent("Set XP-waiting room", "setXpWaitingRoom")

	addMapMenu("Nudge")
	addMapEvent("up", "nudge", "Nudge", "Nudge up") 

end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Gauges</name>
				<packageName></packageName>
				<script>function setupGauges()
	setBorderBottom(30)
	bottom_container = Geyser.HBox:new({
	  name = "bottom_container",
	  x=2, y=-30,
	  width = "65%", height=30,
	})

  hpbar = Geyser.Gauge:new({
    name="hpbar",
    x=5, y=0,
    width="32%", height="100%",
  }, bottom_container)
  
  hpbar.front:setStyleSheet([[
  	 background-color: green;
      border-top: 1px black solid;
      border-left: 1px black solid;
      border-bottom: 1px black solid;
      border-radius: 4;
      padding: 3px;
      margin: 3px;
  ]])
  hpbar.back:setStyleSheet([[
      background-color: gray;
      border-width: 1px;
      border-color: black;
      border-style: solid;
      border-radius: 4;
      padding: 3px;
      margin: 3px;
  ]])
  
  gpbar = Geyser.Gauge:new({
    name="gpbar",
    x="32%", y=0,
    width="32%", height="100%",
  }, bottom_container)
  
  gpbar.front:setStyleSheet([[
  	 background-color: red;
      border-top: 1px black solid;
      border-left: 1px black solid;
      border-bottom: 1px black solid;
      border-radius: 4;
      padding: 3px;
      margin: 3px;
  ]])
  gpbar.back:setStyleSheet([[
      background-color: gray;
      border-width: 1px;
      border-color: black;
      border-style: solid;
      border-radius: 4;
      padding: 3px;
      margin: 3px;
  ]])
  
  xpbar = Geyser.Gauge:new({
    name="xpbar",
    x="66%", y=0,
    width="32%", height="100%",
  	fgColor="white"
  }, bottom_container)
  
  xpbar.front:setStyleSheet([[
      background-color: blue;
      border-top: 1px black solid;
      border-left: 1px black solid;
      border-bottom: 1px black solid;
      border-radius: 4;
      padding: 3px;
      margin: 3px;
  ]])
  
  xpbar.back:setStyleSheet([[
      background-color: gray;
      border-width: 1px;
      border-color: black;
      border-style: solid;
      border-radius: 4;
      padding: 3px;
      margin: 3px;
  ]])
  
  lockoutGauge = Geyser.Gauge:new({
    name="lockoutGauge",
    x="5", y="5",
    width="200", height="20",
  	fgColor="white"
  })
  
  lockoutGauge.front:setStyleSheet([[
      background-color: rgba(255, 255, 255, 128);
      border-top: 1px black solid;
      border-left: 1px black solid;
      border-bottom: 1px black solid;
      border-radius: 4;
      padding: 10px;
      margin: 3px;
      opacity: 0.5;
  ]])
  
  lockoutGauge.back:setStyleSheet([[
      background-color: rgba(128,128,128, 128);
      border-width: 1px;
      border-color: black;
      border-style: solid;
      border-radius: 4;
      padding: 10px;
      margin: 3px;
      opacity: 0.5;
  ]])
  lockoutGauge:hide()
  
  updateGauges()
end


function updateGauges()
  hp = hp or 1
  gp = gp or 1
  xp = xp or 1
	max_hp = max_hp or 1
	max_gp = max_gp or 1
	max_xp = max_xp or 1

	hpbar:setValue(cap(hp, max_hp), max_hp, "&lt;p style='font-size:12pt;margin-left:10px'&gt;&lt;b&gt;" .. (hp or "?") .. " HP&lt;/b&gt;&lt;/p&gt;")
	gpbar:setValue(cap(gp, max_gp), max_gp, "&lt;p style='font-size:12pt;margin-left:10px'&gt;&lt;b&gt;" .. (gp or "?") .. " GP&lt;/b&gt;&lt;/p&gt;")
	local xp_bar_max = max_xp
	if xp_helper or xp_health_pause then
		xp_bar_max = xp_goal
	end


	xpbar:setValue(cap(xp, xp_bar_max), xp_bar_max, "&lt;p style='font-size:12pt;margin-left:10px'&gt;&lt;b&gt;" .. (math.floor(xp/1000) or "?") .. "k XP ".. showXpRate() .. "&lt;/b&gt;&lt;/p&gt;") 
end

function showXpRate()
	local rate = ""
	if xp_stats and xp_stats.xp_per_hour() &gt; 10000 then
		local time_left = xp_stats.time_to(xp_goal)
		if time_left then
			time_left = " " .. time_left .. " kvar"
		else
			time_left = ""
		end
		rate = xp_stats.presentation() .. time_left
	end
  return rate
end

function cap(x, max)
	if not max then
		return 0
	end
	if not x then
		return 0
	end
	if x &gt; max then
		return max
	end
	return x
end


</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>Setup</name>
			<packageName></packageName>
			<script>function Setup()
  loadFrScripts()
  FR.setup()
  xp_stats = XpStats()
  initLayout()
end

function frModulePath()
  local moduleName = "FinalRealms"
  local xmlFilePath = getModulePath(moduleName)
  local pathLength = #(moduleName .. ".xml")
  local path = xmlFilePath:sub(1, -pathLength - 1)
  return path
end

function loadFrScripts()
  dofile(frModulePath() .. "/src/load.lua")
end
</script>
			<eventHandlerList>
				<string>sysLoadEvent</string>
			</eventHandlerList>
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>Locations</name>
			<packageName></packageName>
			<script>locations = {

guild = 314,
kk_pub = 69,
kk_xp = 653,
newb_vault = 352,
mirkwood = 957

}


function showLocations()
	display(locations)
end
</script>
			<eventHandlerList />
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Mapping</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Mapping</name>
				<packageName></packageName>
				<script>
long_exits = {
	n = "north",
	s = "south",
	se = "southeast",
	sw = "southwest",
	w = "west",
	e = "east",
	nw = "northwest",
	ne = "northeast",
	u = "up",
	d = "down",
}

exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  ["in"] = 11,
  out = 12,
  [1] = "north",
  [2] = "northeast",
  [3] = "northwest",
  [4] = "east",
  [5] = "west",
  [6] = "south",
  [7] = "southeast",
  [8] = "southwest",
  [9] = "up",
  [10] = "down",
  [11] = "in",
  [12] = "out",
}

opposingmap = {
  n = "s",
  ne = "sw",
  nw = "se",
  e = "w",
  w = "e",
  s = "n",
  se = "nw",
  sw = "ne",
  u = "d",
  d = "u",
  ["in"] = "out",
  out = "in",
  [1] = "south",
  [2] = "southwest",
  [3] = "southeast",
  [4] = "west",
  [5] = "east",
  [6] = "north",
  [7] = "northwest",
  [8] = "northeast",
  [9] = "down",
  [10] = "up",
  [11] = "out",
  [12] = "in",
}

function testCreate()
	clear()
	dwarf_newbie = addAreaName('Dwarf Newbie')

	room1 = createRoomID()
	addRoom(room1)
	setRoomArea(room1, dwarf_newbie)
	setRoomCoordinates(room1, 0,0,0)

	room2 = createRoomID()
	addRoom(room2)
	setRoomArea(room2, dwarf_newbie)
	setRoomCoordinates(room2, 1,0,0)

	setExit(room1, room2, 4)
	setExit(room2, room1, 5)

	centerview(room1)
end

function clear()
	deleteArea(dwarf_newbie)
end

function getRelativeCoordinates(room_id, dir)
	x,y,z = getRoomCoordinates(room_id)

	if dir == "n" then
		y = y+1
	elseif dir == "ne" then
		y = y+1
		x = x+1
	elseif dir == "e" then
		x = x+1
	elseif dir == "se" then
		y = y-1
		x = x+1
	elseif dir == "s" then
		y = y-1
	elseif dir == "sw" then
		y = y-1
		x = x-1
	elseif dir == "w" then
		x = x-1
	elseif dir == "nw" then
		y = y+1
		x = x-1
	elseif dir == "u" or dir == "up" then
		z = z+1
	elseif dir == "d" or dir == "down" then
		z = z-1
	end
	return x,y,z
end

function setRelativeCoordinates(room_id, relative_to_room, dir)
	x,y,z = getRelativeCoordinates(relative_to_room, dir)
	setRoomCoordinates(room_id,x,y,z)
end

function listRooms(room_ids)
	for i,room in pairs(room_ids) do
		name = getRoomName(room)
		echo(name .. " (" .. room .. ")\n")
	end
end

function tablelength(T)
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end

function findRoom(room_name)
	if room_name == nil then
		return nil
	end
		searched_rooms = searchRoom(room_name)
		potential_rooms = {}
		for i,name in pairs(searched_rooms) do
			if name == room_name then
				potential_rooms[#potential_rooms+1] = i
			end
		end
		if tablelength(potential_rooms) == 1 then
--			echo("\nFound a room, centering on it\n")
			return potential_rooms[1]
		end
	return nil
end

function doSpeedWalk()
	echo("Move manually to stop speedwalking.\n")
  echo("Path we need to take: " .. table.concat(speedWalkDir, ", ") .. "\n")
  echo("Rooms we'll pass through: " .. table.concat(speedWalkPath, ", ") .. "\n")
  speed_walking = true
  stepWalk()
end

function stepWalk()
	if not next(speedWalkDir) then
		speed_walking = false
		return
	end
	movement = speedWalkDir[1]
	table.remove(speedWalkDir, 1)
	send(movement)
end

function detectAndSetRoomEnvironment(room_id)
	name = getRoomName(room_id)
	selectString(name, 1)
	r,g,b = getFgColor()
	color_id = r*256*256 + g*256 + b
	environment = getCustomEnvColorTable()[color_id]
	if environment == nil then
		setCustomEnvColor(color_id, r, g, b, 255)
	end
	setRoomEnv(room_id, color_id)
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>showRoomId</name>
				<packageName></packageName>
				<script>function showRoomId(...)
	echo("\n")
	for i = 3,arg['n'] do
		local room_id = arg[i]
		echo(room_id .. "\n")
   end
end
</script>
				<eventHandlerList>
					<string>showRoomId</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Highlighting</name>
				<packageName></packageName>
				<script>function highlightRooms(rooms)
	local r,g,b = unpack(color_table.green)
	local br,bg,bb = unpack(color_table.yellow)

	for room_id, active in pairs(rooms) do
		highlightRoom(room_id, r,g,b,br,bg,bb, 2, 0, 255)
	end
end

function unhighlightRooms(rooms)
	for room_id, active in pairs(rooms) do
		unHighlightRoom(room_id)
	end
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>nudge</name>
				<packageName></packageName>
				<script>function nudge(event, name, ...)
	for i = 1,arg['n'] do
		local room_id = arg[i]
		setRelativeCoordinates(room_id, room_id, name)
   end
	
end
</script>
				<eventHandlerList>
					<string>nudge</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>LoadSaveMap</name>
				<packageName></packageName>
				<script>
function getModuleLocation()
  local moduleFilePath = getModulePath("FinalRealms")
  local modulePath = string.match(moduleFilePath, "(.*)FinalRealms.xml$")
  return modulePath
end

function getFinalRealmsMapPath()
  return getModuleLocation() .. "map.dat"
end

function loadFinalRealmsMap()
  local mapPath = getFinalRealmsMapPath()

  echo("Loading map from " .. mapPath .. "\n")
  if loadMap(mapPath) then
    echo("OK" .. "\n")
  else
    echo("Failed!" .. "\n")
  end
end

function saveFinalRealmsMap()
  local mapPath = getFinalRealmsMapPath()

  echo("Saving map to " .. mapPath .. "\n")
  if saveMap(mapPath) then
    echo("OK" .. "\n")
  else
    echo("Failed!" .. "\n")
  end
end
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>XP</name>
			<packageName></packageName>
			<script>
flee_limit = 0.6
health_limit_percent = 0.8
heal_limit_percent = 0.65
gp_limit = 0.26
repop_delta = 600

fleeing = fleeing or false

--xp_goal = max_xp*1.3
xp_goal=2000000
function goalReached()
	return xp &gt;= xp_goal
end

function checkHealth()
	if not xp_helper and not xp_health_pause then
		return
	end

	if hp &lt; max_hp * flee_limit and current_room ~= xp_area.waiting_room then
		-- run to waiting room
		if not fleeing and xp_area.waiting_room and getPath(current_room, xp_area.waiting_room) then
			echo("\nBrave sir robin...\n")
			refreshButtons()
			xp_path = copySpeedWalkDir()
			fighting = 0
			fleeing = true
			stepXp()
		end
	else
		fleeing = false
	end

	if hp &lt; max_hp * heal_limit_percent then
		send("cast cure large wounds at me")
	end

	if hp &lt; max_hp * health_limit_percent then
		if not xp_health_pause then
			xp_helper = false
			xp_health_pause = true
			echo("\nPauseing XP, too little HP\n")
			refreshButtons()
		end

--		if xp_health_timer then
--			killTimer(xp_health_timer)
--		end
--		xp_health_timer = tempTimer(60, [[send("sc")]])
	elseif xp_health_pause then
		xp_helper = true
		xp_health_pause = false
		echo("\nHealth regained, resuming XP\n")
		--refreshButtons()
		stepXp()
	end
end

function checkGuildPoints()
	if not xp_helper and not xp_gp_pause then
		return
	end
   
	gp_disabled = true
	if gp_disabled then
		return
	end
  
	if gp &lt;= 30 then  --gp_limit * max_gp then
		if not xp_gp_pause then
			xp_helper = false
			xp_gp_pause = true
			echo("\nPauseing XP, regenerating GP\n")
		end
	elseif xp_gp_pause and gp &gt;= max_gp then
		xp_helper = true
		xp_gp_pause = false
		echo("\nGP regained, resuming XP\n")
		stepXp()
	end

	if xp_gp_pause then
		if xp_gp_timer then
			killTimer(xp_gp_timer)
		end
		xp_gp_timer = tempTimer(60, [[send("sc")]])
	end
end

function addFight(with)
	if fighting == nil then
		fighting = 0
	end

	if string.starts(with, "two") then
		fighting = fighting + 2
	elseif string.starts(with, "three") then
		fighting = fighting + 3
	elseif string.starts(with, "four") then
		fighting = fighting + 4
	elseif string.starts(with, "five") then
		fighting = fighting + 5
	elseif string.starts(with, "six") then
		fighting = fighting + 6
	else
		fighting = fighting + 1
	end
end

function removeFight(with)
	if fighting ~= nil and fighting &gt; 0 then
		fighting = fighting -1
	else
		fighting = 0
	end

	if not xp_helper and not xp_health_pause and not xp_gp_pause then
		return
	end

	if fighting == 0 then
		send("loot_bury")
		send("xpk")
	end
end

xp_area = xp_area or {}

function repopped(room_id)
	if xp_visit_time[room_id] then
		return xp_visit_time[room_id] &lt;= (os.time() - repop_delta)
	else
		return false
	end
end

function stepXp()
	if not xp_helper and not fleeing then
		return
	end

	if xp_movement_timer then
		killTimer(xp_movement_timer)
		xp_movement_timer = nil
	end

	-- If a movement has been set wait for a new room before doing anything else
	if movement ~= nil then
		return
	end

	--checkHealth()
	--checkGuildPoints()

	if fighting &gt; 0 and not fleeing then
		return
	end

	-- test if the goal is reached, if so return to waiting room and stop
	if goalReached() and current_room == xp_area.waiting_room then
		toggleXp() -- stop working
		send("q")
		auto_buff = false
		refreshButtons()
		return
	elseif goalReached() then
		-- reuse fleeing to get back
		if not fleeing and xp_area.waiting_room and getPath(current_room, xp_area.waiting_room) then
			echo("\nGoal reached, going to waiting room...\n")
			xp_path = copySpeedWalkDir()
			fighting = 0
			fleeing = true
		end
	end

	if (moving and not fleeing) and repopped(current_room) then
		-- Attack targets, but only if this is a room where we expect to find monsters
		send("xpk")
		moving = false
		return
	end

	if 	fleeing and current_room == xp_area.waiting_room then
		fleeing = false
	else
		-- not fighting or moving, move
		movement = nextXpDir()
		if movement == nil then
			echo("\nWaiting for a room to repop.\n")
			xp_restart_timer = tempTimer(60, stepXp)
		else
			moving = true
			xp_movement_timer = tempTimer(60, [[send("gl")]])
			send("party move " .. movement)
		end
	end
end

function nextXpDir()
	xp_path = xp_path or {}

   -- check if there are saved directions for us
	if #xp_path == 0 then
		-- no saved directions, calculate path to next room
		for room_id,_ in pairs(xp_visit_time) do
			if repopped(room_id) and getPath(current_room, room_id) then
				local route_length = tablelength(speedWalkDir)
				if route_length &lt; #xp_path or #xp_path == 0 then
					shortest_route = route_length
					xp_path = copySpeedWalkDir()
				end
			end
		end

		-- no more directions, return to waiting room
		if #xp_path == 0 and xp_area.waiting_room and getPath(current_room, xp_area.waiting_room) then
			xp_path = copySpeedWalkDir()
		end
	end

	if #xp_path &gt; 0 then
		next_dir = xp_path[1]
		table.remove(xp_path, 1)
		return next_dir
	end

	return nil
end

function visitRoom()
	if xp_helper or xp_health_pause then
		-- make sure the current room shows as visited
		unHighlightRoom(current_room)

		if xp_visit_time[current_room] then
		 	-- record the time this room was visited last
			xp_visit_time[current_room] = os.time()
		end
	end
end

function copySpeedWalkDir()
	local result = {}
	for i,d in pairs(speedWalkDir) do
		result[i] = d
	end
	return result
end
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>add2XpArea</name>
				<packageName></packageName>
				<script>function add2XpArea(...)
	if not xp_area then
		echo("No XP area defined")
		return
	end

	for i = 3,arg['n'] do
		local room_id = arg[i]
		xp_area.rooms[room_id] = true
   end

	highlightRooms(xp_area.rooms)
end
</script>
				<eventHandlerList>
					<string>add2XpArea</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>setXpArea</name>
				<packageName></packageName>
				<script>function setXpArea(...)
	if not xp_area then
		echo("No XP area defined")
		return
	end

	for room_id, _ in pairs(xp_area.rooms) do
		unHighlightRoom(room_id)
	end

--	xp_area = xp_area or {}
--	xp_areas[xp_area_name] = xp_area
	xp_area.rooms = {}

	for i = 3,arg['n'] do
		local room_id = arg[i]
		xp_area.rooms[room_id] = true
   end

	highlightRooms(xp_area.rooms)
end
</script>
				<eventHandlerList>
					<string>setXpArea</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>removeFromXpArea</name>
				<packageName></packageName>
				<script>function removeFromXpArea(...)
	if not xp_area then
		return
	end

	for i = 3,arg['n'] do
		local room_id = arg[i]
		xp_area.rooms[room_id] = nil
		unHighlightRoom(room_id)
   end
end
</script>
				<eventHandlerList>
					<string>removeFromXpArea</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>mirkwood</name>
				<packageName></packageName>
				<script>mirkwood = 
{
  [964] = true,
  [972] = true,
  [980] = true,
  [988] = true,
  [996] = true,
  [1004] = true,
  [1012] = true,
  [1113] = true,
  [1093] = true,
  [1080] = true,
  [1096] = true,
  [1112] = true,
  [1128] = true,
  [1129] = true,
  [965] = true,
  [973] = true,
  [981] = true,
  [989] = true,
  [997] = true,
  [1005] = true,
  [1013] = true,
  [1127] = true,
  [982] = true,
  [1125] = true,
  [1083] = true,
  [1082] = true,
  [1098] = true,
  [1114] = true,
  [1130] = true,
  [958] = true,
  [966] = true,
  [974] = true,
  [1067] = true,
  [990] = true,
  [998] = true,
  [1006] = true,
  [1014] = true,
  [1095] = true,
  [1121] = true,
  [1097] = true,
  [1068] = true,
  [1084] = true,
  [1100] = true,
  [1116] = true,
  [1119] = true,
  [959] = true,
  [967] = true,
  [975] = true,
  [983] = true,
  [991] = true,
  [999] = true,
  [1007] = true,
  [1015] = true,
  [1111] = true,
  [1117] = true,
  [1115] = true,
  [1070] = true,
  [1086] = true,
  [1102] = true,
  [1118] = true,
  [1071] = true,
  [960] = true,
  [968] = true,
  [976] = true,
  [984] = true,
  [992] = true,
  [1000] = true,
  [1008] = true,
  [1016] = true,
  [1109] = true,
  [1085] = true,
  [1107] = true,
  [1072] = true,
  [1088] = true,
  [1104] = true,
  [1120] = true,
  [1105] = true,
  [961] = true,
  [969] = true,
  [977] = true,
  [985] = true,
  [993] = true,
  [1001] = true,
  [1009] = true,
  [1017] = true,
  [1101] = true,
  [1099] = true,
  [1074] = true,
  [1090] = true,
  [1106] = true,
  [1122] = true,
  [1073] = true,
  [962] = true,
  [970] = true,
  [978] = true,
  [986] = true,
  [994] = true,
  [1002] = true,
  [1123] = true,
  [1018] = true,
  [1087] = true,
  [1091] = true,
  [1089] = true,
  [1076] = true,
  [1092] = true,
  [1108] = true,
  [1124] = true,
  [1081] = true,
  [963] = true,
  [971] = true,
  [979] = true,
  [987] = true,
  [995] = true,
  [1003] = true,
  [1011] = true,
  [1019] = true,
  [1079] = true,
  [1075] = true,
  [1077] = true,
  [1078] = true,
  [1094] = true,
  [1110] = true,
  [1126] = true,
  [1069] = true
}
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>loadXpData</name>
				<packageName></packageName>
				<script>function loadXpData()
	xp_areas = {}
	table.load(getMudletHomeDir() .. "/xp_areas.dat", xp_areas)
end

</script>
				<eventHandlerList>
					<string>sysLoadEvent</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>saveXpData</name>
				<packageName></packageName>
				<script>function saveXpData()
	xp_areas = xp_areas or {}
	table.save(getMudletHomeDir() .. "/xp_areas.dat", xp_areas)
end

</script>
				<eventHandlerList>
					<string>sysExitEvent</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>StartStop</name>
				<packageName></packageName>
				<script>function toggleXp()

	if not xp_area or not xp_area_name then
		echo("No XP area selected\n")
		return
	end

	xp_helper = not (xp_helper or xp_health_pause or xp_gp_pause)
	xp_health_pause = false
	xp_gp_pause = false
	xp_path = nil
	fleeing = false

	fighting = 0

	-- start out with the defined xp_area
	xp_left_to_visit = {}
	xp_visit_time = {}
	for room_id,active in pairs(xp_area.rooms) do
		xp_left_to_visit[room_id] = active
		xp_visit_time[room_id] = 0
	end

	if xp_helper then
		echo("\nXP Helper on\n")
		send("alias xpk party attack " .. xp_area_name)
--		send("alias xp1 cast thorn shock at " .. xp_area_name)
--		send("alias xp2 cast thorn cloud at " .. xp_area_name)

		highlightRepopped()
		send("xpcount start")
		xp_stats = XpStats()
		stepXp()
		enableTimer("MarkRooms")
	else
		echo("\nXP Helper off\n")
		unhighlightRooms(xp_area.rooms)
		unHighlightRoom(xp_area.waiting_room)
		disableTimer("MarkRooms")
	end

	refreshButtons()
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>List</name>
				<packageName></packageName>
				<script>function listXpAreas()

	xp_areas = xp_areas or {}

	echo("\n")
	for key, value in pairs(xp_areas) do
		echo("  " .. key .. " (" .. table.size(value.rooms) .. " rooms)\n")
	end
	echo("\n")
end

</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>setXpWaitingRoom</name>
				<packageName></packageName>
				<script>function setXpWaitingRoom(name, label, room_id)
	if not xp_area then
		echo("No XP area defined\n")
		return
	end

	echo("\n")
	echo(getRoomName(room_id) .. "\n")
	xp_area.waiting_room = room_id
end
</script>
				<eventHandlerList>
					<string>setXpWaitingRoom</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>HighlightRepopped</name>
				<packageName></packageName>
				<script>function highlightRepopped()
  local valid = xp_visit_time or false
  if not valid then
    return
  end
  
	local r,g,b = unpack(color_table.green)
	local br,bg,bb = unpack(color_table.yellow)

	for room_id,_ in pairs(xp_visit_time) do
		if repopped(room_id) then
			highlightRoom(room_id, r,g,b,br,bg,bb, 2, 0, 255)
		else
			unHighlightRoom(room_id)
		end
	end

	highlightRoom(xp_area.waiting_room, 0, 255, 0, 0, 255, 0, 2, 0, 255)
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>XpStats</name>
				<packageName></packageName>
				<script>--xp_stats = xp_stats or XpStats()

function XpStats()

	local self = {
	}

	local start_xp_time = 0
	local start_xp_value = 0
	local last_xp_time = 0
	local last_xp_value = 0

	function self.restart()
		start_xp_time = 0
		last_xp_time = 0
		last_xp_value = 0
	end

	function self.new_xp_value(value)
		last_xp_value = value
		last_xp_time = os.time()
		if start_xp_time == 0 then
			start_xp_value = last_xp_value
			start_xp_time = last_xp_time
		end

		if last_xp_value &lt; start_xp_value then
			self.restart()
		end
	end

	function self.xp_per_second()
		local xp_gained = last_xp_value - start_xp_value
		local time_delta = last_xp_time - start_xp_time

		if time_delta &gt; 0 then
			return xp_gained / time_delta
		end
		return 0
	end

	function self.xp_per_hour()
		local xp_p_s = self.xp_per_second()
		return xp_p_s * 60 * 60
	end

	function self.presentation()
		local xp_p_h = self.xp_per_hour()
		if xp_p_h &gt;= 1000 then
			return tostring(math.floor(xp_p_h / 1000)) .. "k/h"
		else
			return tostring(math.floor(xp_p_h)) .. "/h"
		end
	end

	function self.time_to(value)
		local xp_left = value - xp
		if xp_left &lt;= 0 then
			return "Klar!"
		end
		if self.xp_per_hour() &lt;= 0 then
			return nil
		end
		local hours_left_frac = xp_left / self.xp_per_hour()
		local hours_left = math.floor(hours_left_frac)
		local minutes_left = math.floor((hours_left_frac - hours_left) * 60)
		if minutes_left &lt; 10 then
			minutes_left = "0" .. minutes_left
		end
		return hours_left .. ":" .. minutes_left
	end

	return self
end
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<Script isActive="yes" isFolder="no">
			<name>AutoCasting</name>
			<packageName></packageName>
			<script>-- Set in guild-specific to adjust
gp_needed = 0.2
multi_limit = 3
lockout = lockout or 0
max_lockout = max_lockout or 0

function castOnSingle()
  send("xp1")
end

function castOnMultiple()
  send("xp2")
end

function refreshLockoutGauge()
  if lockout &lt;= 0 then
    lockoutGauge:hide()
  else
    lockoutGauge:show()
    lockoutGauge:setValue(lockout, max_lockout, "")
  end
end

function doCasts()
  if lockout &gt; max_lockout then
    max_lockout = lockout
    refreshLockoutGauge()
  end

  if lockout &gt; 0 then
    lockout = lockout - 0.1
    refreshLockoutGauge()
    return
  else
    lockout = 0
    max_lockout = 0
    refreshLockoutGauge()
  end
  
	gp = gp or 0
  
  if gp &lt; max_gp*gp_needed then
    return
  end
  
  local buffLockout = refreshBuffs()
  if buffLockout &gt; 0 then
    lockout = buffLockout
    max_lockout = lockout
    refreshLockoutGauge()
    return
  end
  
  if not auto_cast then
    lockout = 0
    max_lockout = 0
    refreshLockoutGauge()
		return
	end
     
  fighting = fighting or 0

	if fighting == 0 then -- not fighting anyone
		--echo("Not fighting")
	elseif fighting &gt;= multi_limit then
		castOnMultiple()
    lockout = 6
	else
    castOnSingle()
    lockout = 6
	end
  
  max_lockout = lockout
  refreshLockoutGauge()
end
</script>
			<eventHandlerList />
		</Script>
		<Script isActive="yes" isFolder="no">
			<name>globalEventTest</name>
			<packageName></packageName>
			<script>function testevent()
  echo "Test event"
end
</script>
			<eventHandlerList>
				<string>testevent</string>
			</eventHandlerList>
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Gmcp</name>
			<packageName></packageName>
			<script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external scripts --
-------------------------------------------------
</script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>ReceiveGmcpVitals</name>
				<packageName></packageName>
				<script>function ReceiveGmcpVitals()
  --echo("HP:" .. gmcp.Char.Vitals.hp)
  hp = gmcp.Char.Vitals.hp
  max_hp = gmcp.Char.Vitals.maxhp
  
  gp = gmcp.Char.Vitals.gp
  max_gp = gmcp.Char.Vitals.maxgp
  
  xp = gmcp.Char.Vitals.xp
  max_xp = gmcp.Char.Vitals.maxxp
  
  xp_stats.new_xp_value(xp)

  updateGauges()

  checkHealth()
  checkGuildPoints()
end
</script>
				<eventHandlerList>
					<string>gmcp.Char.Vitals</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>ReceiveGmcpStatus</name>
				<packageName></packageName>
				<script>function ReceiveGmcpStatus()
  --echo("Status received")
  level = gmcp.Char.Status.level
  
  if not guild or guild_name ~= gmcp.Char.Status.guild then
    guild_name = gmcp.Char.Status.guild
    setupGuild(guild_name)
  end
end
</script>
				<eventHandlerList>
					<string>gmcp.Char.Status</string>
				</eventHandlerList>
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>ReceiveGmcpEffects</name>
				<packageName></packageName>
				<script>function ReceiveGmcpEffects()
  updateEffects(gmcp.Char.Effects)
  refreshButtons()
end

--  Lockout : Casting
</script>
				<eventHandlerList>
					<string>gmcp.Char.Effects</string>
				</eventHandlerList>
			</Script>
			<Script isActive="no" isFolder="no">
				<name>ReceiveGmcpHeartbeat</name>
				<packageName></packageName>
				<script>function ReceiveGmcpHeartbeat()
  display(gmcp.Action.Heartbeat)
end
</script>
				<eventHandlerList>
					<string>gmcp.Action.Heartbeat</string>
				</eventHandlerList>
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Navigation</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>-1</keyCode>
			<keyModifier>0</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>north</name>
				<packageName></packageName>
				<script></script>
				<command>n</command>
				<keyCode>16777235</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>south</name>
				<packageName></packageName>
				<script></script>
				<command>s</command>
				<keyCode>16777237</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>east</name>
				<packageName></packageName>
				<script></script>
				<command>e</command>
				<keyCode>16777236</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>west</name>
				<packageName></packageName>
				<script></script>
				<command>w</command>
				<keyCode>16777234</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>sw</name>
				<packageName></packageName>
				<script></script>
				<command>sw</command>
				<keyCode>16777233</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>se</name>
				<packageName></packageName>
				<script></script>
				<command>se</command>
				<keyCode>16777239</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>ne</name>
				<packageName></packageName>
				<script></script>
				<command>ne</command>
				<keyCode>16777238</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>nw</name>
				<packageName></packageName>
				<script></script>
				<command>nw</command>
				<keyCode>16777232</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>u</name>
				<packageName></packageName>
				<script></script>
				<command>u</command>
				<keyCode>45</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>d</name>
				<packageName></packageName>
				<script></script>
				<command>d</command>
				<keyCode>43</keyCode>
				<keyModifier>536870912</keyModifier>
			</Key>
		</KeyGroup>
		<KeyGroup isActive="yes" isFolder="yes">
			<name>Abilities</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>33554431</keyCode>
			<keyModifier>0</keyModifier>
			<Key isActive="yes" isFolder="no">
				<name>F1</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F1")
</script>
				<command></command>
				<keyCode>16777264</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F2</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F2")
</script>
				<command></command>
				<keyCode>16777265</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F3</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F3")
</script>
				<command></command>
				<keyCode>16777266</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F4</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F4")
</script>
				<command></command>
				<keyCode>16777267</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F5</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F5")
</script>
				<command></command>
				<keyCode>16777268</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F6</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F6")
</script>
				<command></command>
				<keyCode>16777269</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F7</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F7")
</script>
				<command></command>
				<keyCode>16777270</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F8</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F8")
</script>
				<command></command>
				<keyCode>16777271</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F9</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F9")
</script>
				<command></command>
				<keyCode>16777272</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
			<Key isActive="yes" isFolder="no">
				<name>F10</name>
				<packageName></packageName>
				<script>activateAbilityShortcut("F10")
</script>
				<command></command>
				<keyCode>16777273</keyCode>
				<keyModifier>0</keyModifier>
			</Key>
		</KeyGroup>
	</KeyPackage>
	<HelpPackage>
		<helpURL></helpURL>
	</HelpPackage>
</MudletPackage>
